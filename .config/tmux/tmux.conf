set-option -sa terminal-overrides ",*256col*:RGB"
# set-option -sa terminal-overrides "xterm-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"
# set-option -g default-shell /bin/zsh
# set -g default-terminal "screen-256color"
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g display-panes-colour default
set -g display-panes-active-colour default


set -g mouse on
set -g set-clipboard on
unbind r
bind r source-file ~/.config/tmux/tmux.conf

# start indexing at one for convenience.
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set -g detach-on-destroy off  # don't exit from tmux when closing a session fix colors in older terminals set-option -sa terminal-overrides ",*256col*:RGB" set -g default-terminal "tmux-256color" set -g mouse on set -g set-clipboard on
set -g escape-time 0             # zero-out escape time delay
set -g history-limit 10000     # increase history size (from 2,000)
set -g renumber-windows on       # renumber all windows when any window is closed

# change tmux prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# S-M vim keys to switch between windows.
bind -n M-H previous-window
bind -n M-L next-window

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'joshmedeski/t-smart-tmux-session-manager' 
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'catppuccin/tmux'


set -g @continuum-restore 'on'

set -g @resurrect-strategy-nvim 'session'
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_status_modules_right "host date_time"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{pane_current_path}"
set -g @catppuccin_date_time_text "%H:%M"

set -g status-position top
# set vi-mode
set-window-option -g mode-keys vi
#bindings in yank mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and cancel


# pane resizing
# bind -r H resize-pane -L 2
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind -r J resize-pane -D 2
# bind -r K resize-pane -U 2
# bind -r L resize-pane -R 2
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind -n 'M-,' resize-pane -L 5
bind -n 'M-.' resize-pane -L 5
bind -n 'M-u' resize-pane -U 5
bind -n 'M-d' resize-pane -D 5

# quick navigation to most used projects
bind-key -r J run-shell "~/.local/bin/tmux-sessionizer ~/code/bnaa"
bind-key -r K run-shell "~/.local/bin/tmux-sessionizer ~/.config/nvim"
bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/.config/tmux"
bind-key -r F run-shell "~/.local/bin/tmux-sessionizer ~/code/aoc"
bind-key -r D run-shell "~/.local/bin/tmux-sessionizer ~/code/ansible"

bind-key -n 'C-M-J' run-shell "~/.local/bin/tmux-sessionizer ~/code/bnaa"
bind-key -n 'C-M-K' run-shell "~/.local/bin/tmux-sessionizer ~/.config/nvim"
bind-key -n 'C-M-L' run-shell "~/.local/bin/tmux-sessionizer ~/.config/tmux"
bind-key -n 'C-M-F' run-shell "~/.local/bin/tmux-sessionizer ~/code/aoc"
bind-key -n 'C-M-D' run-shell "~/.local/bin/tmux-sessionizer ~/code/ansible"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" { send-keys C-h } { if-shell -F "#{pane_at_left}"   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F "#{pane_at_bottom}" {} { select-pane -D } }
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F "#{pane_at_top}"    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F "#{pane_at_right}"  {} { select-pane -R } }
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R


bind-key -r f run-shell "tmux neww tmux-sessionizer"
# open new panis in current directory instead of homefolder as getting to homefolder is always easier
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

set -g @sessionx-bind 'o'

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt

run '~/.tmux/plugins/tpm/tpm'
set -g status-style bg=default
set -g status-bg default
set-option -g default-command "reattach-to-user-namespace -l zsh"
